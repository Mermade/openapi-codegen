/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 1.5.0
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.swagger_petstore) {
      root.swagger_petstore = {};
    }
    root.swagger_petstore.swagger_petstore = factory(root.swagger_petstore.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';


  /**
   * The ApiResponse model module.
   * @module ApiResponse/ApiResponse
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>ApiResponse</code>.
   * @alias module:ApiResponse/ApiResponse
   * @class
   */
  var exports = function() {
    var _this = this;




  };

  /**
   * Constructs a <code>ApiResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:ApiResponse/ApiResponse} obj Optional instance to populate.
   * @return {module:ApiResponse/ApiResponse} The populated <code>ApiResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('code')) {
        obj['code']
      }
      if (data.hasOwnProperty('type')) {
        obj['type']
      }
      if (data.hasOwnProperty('message')) {
        obj['message']
      }
    }
    return obj;
  }
  /**
   * @member {} code
   */
  exports.prototype['code'] = undefined;
  /**
   * @member {} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {} message
   */
  exports.prototype['message'] = undefined;
  /**
   * @return {}
   */
  exports.prototype.getCode = function() {
    return this['code'];
  }

  /**
   * @param {} code
   */
  exports.prototype.setCode = function(code) {
    this['code'] = code;
  }

  /**
   * @return {}
   */
  exports.prototype.getType = function() {
    return this['type'];
  }

  /**
   * @param {} type
   */
  exports.prototype.setType = function(type) {
    this['type'] = type;
  }

  /**
   * @return {}
   */
  exports.prototype.getMessage = function() {
    return this['message'];
  }

  /**
   * @param {} message
   */
  exports.prototype.setMessage = function(message) {
    this['message'] = message;
  }


  return exports;
}));
