/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator 1.5.0.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
/*
 * Pet.h
 *
 * 
 */

#ifndef Pet_H_
#define Pet_H_



undefined
#include <memory>


/// <summary>
/// 
/// </summary>
class  Pet
{
public:
    Pet();
    virtual ~Pet();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// Pet members
    
    /// <summary>
    /// 
    /// </summary>
    int getId() const;
    void setId(int value);
    /// <summary>
    /// 
    /// </summary>
    struct{} getCategory() const;
    void setCategory(struct{} value);
    /// <summary>
    /// 
    /// </summary>
    string getName() const;
    void setName(string value);
    /// <summary>
    /// 
    /// </summary>
    [100]string getPhotoUrls() const;
    void setPhotoUrls([100]string value);
    /// <summary>
    /// 
    /// </summary>
    [100]struct{} getTags() const;
    void setTags([100]struct{} value);
    /// <summary>
    /// pet status in the store
    /// </summary>
    string getStatus() const;
    void setStatus(string value);

protected:
    int m_id;
    struct{} m_category;
    string m_name;
    [100]string m_photoUrls;
    [100]struct{} m_tags;
    string m_status;
};


#endif /* Pet_H_ */
