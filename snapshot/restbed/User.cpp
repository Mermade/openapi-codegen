/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator 1.5.0.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#include "User.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;


User::User()
{
    m_id = ;
    m_username = ;
    m_firstName = ;
    m_lastName = ;
    m_email = ;
    m_password = ;
    m_phone = ;
    m_userStatus = ;
    }

User::~User()
{
}

std::string User::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	pt.put("id", m_id);
	pt.put("username", m_username);
	pt.put("firstName", m_firstName);
	pt.put("lastName", m_lastName);
	pt.put("email", m_email);
	pt.put("password", m_password);
	pt.put("phone", m_phone);
	pt.put("userStatus", m_userStatus);
	write_json(ss, pt, false);
	return ss.str();
}

void User::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	m_id = pt.get("id", );
	m_username = pt.get("username", );
	m_firstName = pt.get("firstName", );
	m_lastName = pt.get("lastName", );
	m_email = pt.get("email", );
	m_password = pt.get("password", );
	m_phone = pt.get("phone", );
	m_userStatus = pt.get("userStatus", );
}

int User::getId() const
{
    return m_id;
}
void User::setId(int value)
{
    m_id = value;
}
string User::getUsername() const
{
    return m_username;
}
void User::setUsername(string value)
{
    m_username = value;
}
string User::getFirstName() const
{
    return m_firstName;
}
void User::setFirstName(string value)
{
    m_firstName = value;
}
string User::getLastName() const
{
    return m_lastName;
}
void User::setLastName(string value)
{
    m_lastName = value;
}
string User::getEmail() const
{
    return m_email;
}
void User::setEmail(string value)
{
    m_email = value;
}
string User::getPassword() const
{
    return m_password;
}
void User::setPassword(string value)
{
    m_password = value;
}
string User::getPhone() const
{
    return m_phone;
}
void User::setPhone(string value)
{
    m_phone = value;
}
int User::getUserStatus() const
{
    return m_userStatus;
}
void User::setUserStatus(int value)
{
    m_userStatus = value;
}


