--  Swagger Petstore
--  This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
--
--  OpenAPI spec version: 1.0.0
--  Contact: apiteam@swagger.io
--
--  NOTE: This package is auto generated by the swagger code generator 1.5.0.
--  https://github.com/swagger-api/swagger-codegen.git
--  Do not edit the class manually.with IO.OpenAPI.Model.Default;
with IO.OpenAPI.Api.Models;
with Swagger.Clients;
package IO.OpenAPI.Api.Clients is

   type Client_Type is new Swagger.Clients.Client_Type with null record;

   --  Add a new pet to the store
   procedure addPet
      (Client : in out Client_Type;
       body : in IO.OpenAPI.Api.Models.object);

   --  Update an existing pet
   procedure updatePet
      (Client : in out Client_Type;
       body : in IO.OpenAPI.Api.Models.object);

   --  Finds Pets by status
   procedure findPetsByStatus
      (Client : in out Client_Type;
       status : in array;
       Result : out array);

   --  Finds Pets by tags
   procedure findPetsByTags
      (Client : in out Client_Type;
       tags : in array;
       Result : out array);

   --  Find pet by ID
   procedure getPetById
      (Client : in out Client_Type;
       petId : in integer;
       Result : out Pet);

   --  Updates a pet in the store with form data
   procedure updatePetWithForm
      (Client : in out Client_Type;
       petId : in integer;
       body : in IO.OpenAPI.Api.Models.object);

   --  Deletes a pet
   procedure deletePet
      (Client : in out Client_Type;
       petId : in integer;
       api_key : in string);

   --  uploads an image
   procedure uploadFile
      (Client : in out Client_Type;
       petId : in integer;
       body : in IO.OpenAPI.Api.Models.string;
       Result : out ApiResponse);

   --  Returns pet inventories by status
   procedure getInventory
      (Client : in out Client_Type;
       Result : out object);

   --  Place an order for a pet
   procedure placeOrder
      (Client : in out Client_Type;
       body : in IO.OpenAPI.Api.Models.object;
       Result : out Order);

   --  Find purchase order by ID
   procedure getOrderById
      (Client : in out Client_Type;
       orderId : in integer;
       Result : out Order);

   --  Delete purchase order by ID
   procedure deleteOrder
      (Client : in out Client_Type;
       orderId : in integer);

   --  Create user
   procedure createUser
      (Client : in out Client_Type;
       body : in IO.OpenAPI.Api.Models.object);

   --  Creates list of users with given input array
   procedure createUsersWithArrayInput
      (Client : in out Client_Type;
       body : in IO.OpenAPI.Api.Models.array);

   --  Creates list of users with given input array
   procedure createUsersWithListInput
      (Client : in out Client_Type;
       body : in IO.OpenAPI.Api.Models.array);

   --  Logs user into the system
   procedure loginUser
      (Client : in out Client_Type;
       username : in string;
       password : in string;
       Result : out string);

   --  Logs out current logged in user session
   procedure logoutUser
      (Client : in out Client_Type);

   --  Get user by user name
   procedure getUserByName
      (Client : in out Client_Type;
       username : in string;
       Result : out User);

   --  Updated user
   procedure updateUser
      (Client : in out Client_Type;
       username : in string;
       body : in IO.OpenAPI.Api.Models.object);

   --  Delete user
   procedure deleteUser
      (Client : in out Client_Type;
       username : in string);

end IO.OpenAPI.Api.Clients;
