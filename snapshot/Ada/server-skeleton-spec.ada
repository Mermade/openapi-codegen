--  Swagger Petstore
--  This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
--
--  OpenAPI spec version: 1.0.0
--  Contact: apiteam@swagger.io
--
--  NOTE: This package is auto generated by the swagger code generator 1.5.0.
--  https://github.com/swagger-api/swagger-codegen.git
--  Do not edit the class manually.with IO.OpenAPI.Model.Default;
with Swagger.Servers;
with IO.OpenAPI.Api.Models;
with Security.Permissions;
package IO.OpenAPI.Api.Skeletons is
   use IO.OpenAPI.Api.Models;
   type Server_Type is limited interface;
   --  
   package ACL_ is new Security.Permissions.Definition ("write:pets");
   --  
   package ACL_ is new Security.Permissions.Definition ("read:pets");


   --  Add a new pet to the store
   procedure addPet
      (Server : in out Server_Type;
       body : in object;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Update an existing pet
   procedure updatePet
      (Server : in out Server_Type;
       body : in object;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Finds Pets by status
   procedure findPetsByStatus
      (Server : in out Server_Type;
       status : in array;
       Result  : out array;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Finds Pets by tags
   procedure findPetsByTags
      (Server : in out Server_Type;
       tags : in array;
       Result  : out array;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Find pet by ID
   procedure getPetById
      (Server : in out Server_Type;
       petId : in integer;
       Result  : out Pet;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Updates a pet in the store with form data
   procedure updatePetWithForm
      (Server : in out Server_Type;
       petId : in integer;
       body : in object;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Deletes a pet
   procedure deletePet
      (Server : in out Server_Type;
       petId : in integer;
       api_key : in string;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  uploads an image
   procedure uploadFile
      (Server : in out Server_Type;
       petId : in integer;
       body : in string;
       Result  : out ApiResponse;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Returns pet inventories by status
   procedure getInventory
      (Server : in out Server_Type
       ;
       Result  : out object;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Place an order for a pet
   procedure placeOrder
      (Server : in out Server_Type;
       body : in object;
       Result  : out Order;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Find purchase order by ID
   procedure getOrderById
      (Server : in out Server_Type;
       orderId : in integer;
       Result  : out Order;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Delete purchase order by ID
   procedure deleteOrder
      (Server : in out Server_Type;
       orderId : in integer;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Create user
   procedure createUser
      (Server : in out Server_Type;
       body : in object;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Creates list of users with given input array
   procedure createUsersWithArrayInput
      (Server : in out Server_Type;
       body : in array;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Creates list of users with given input array
   procedure createUsersWithListInput
      (Server : in out Server_Type;
       body : in array;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Logs user into the system
   procedure loginUser
      (Server : in out Server_Type;
       username : in string;
       password : in string;
       Result  : out string;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Logs out current logged in user session
   procedure logoutUser
      (Server : in out Server_Type
       ;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Get user by user name
   procedure getUserByName
      (Server : in out Server_Type;
       username : in string;
       Result  : out User;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Updated user
   procedure updateUser
      (Server : in out Server_Type;
       username : in string;
       body : in object;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Delete user
   procedure deleteUser
      (Server : in out Server_Type;
       username : in string;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   generic
      type Implementation_Type is limited new Server_Type with private;
   package Skeleton is

      procedure Register (Server : in out Swagger.Servers.Application_Type'Class);


      --  Add a new pet to the store
      procedure addPet
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Update an existing pet
      procedure updatePet
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Finds Pets by status
      procedure findPetsByStatus
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Finds Pets by tags
      procedure findPetsByTags
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Find pet by ID
      procedure getPetById
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Updates a pet in the store with form data
      procedure updatePetWithForm
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Deletes a pet
      procedure deletePet
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  uploads an image
      procedure uploadFile
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns pet inventories by status
      procedure getInventory
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Place an order for a pet
      procedure placeOrder
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Find purchase order by ID
      procedure getOrderById
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Delete purchase order by ID
      procedure deleteOrder
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Create user
      procedure createUser
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates list of users with given input array
      procedure createUsersWithArrayInput
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates list of users with given input array
      procedure createUsersWithListInput
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Logs user into the system
      procedure loginUser
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Logs out current logged in user session
      procedure logoutUser
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Get user by user name
      procedure getUserByName
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Updated user
      procedure updateUser
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Delete user
      procedure deleteUser
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);

   end Skeleton;

   generic
      type Implementation_Type is limited new Server_Type with private;
   package Shared_Instance is

      procedure Register (Server : in out Swagger.Servers.Application_Type'Class);


      --  Add a new pet to the store
      procedure addPet
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Update an existing pet
      procedure updatePet
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Finds Pets by status
      procedure findPetsByStatus
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Finds Pets by tags
      procedure findPetsByTags
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Find pet by ID
      procedure getPetById
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Updates a pet in the store with form data
      procedure updatePetWithForm
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Deletes a pet
      procedure deletePet
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  uploads an image
      procedure uploadFile
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns pet inventories by status
      procedure getInventory
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Place an order for a pet
      procedure placeOrder
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Find purchase order by ID
      procedure getOrderById
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Delete purchase order by ID
      procedure deleteOrder
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Create user
      procedure createUser
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates list of users with given input array
      procedure createUsersWithArrayInput
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates list of users with given input array
      procedure createUsersWithListInput
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Logs user into the system
      procedure loginUser
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Logs out current logged in user session
      procedure logoutUser
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Get user by user name
      procedure getUserByName
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Updated user
      procedure updateUser
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Delete user
      procedure deleteUser
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


   private
      protected Server is

         --  Add a new pet to the store
         procedure addPet
            (body : in object;
             Context : in out Swagger.Servers.Context_Type);

         --  Update an existing pet
         procedure updatePet
            (body : in object;
             Context : in out Swagger.Servers.Context_Type);

         --  Finds Pets by status
         procedure findPetsByStatus
            (status : in array;
             Result  : out array;
             Context : in out Swagger.Servers.Context_Type);

         --  Finds Pets by tags
         procedure findPetsByTags
            (tags : in array;
             Result  : out array;
             Context : in out Swagger.Servers.Context_Type);

         --  Find pet by ID
         procedure getPetById
            (petId : in integer;
             Result  : out Pet;
             Context : in out Swagger.Servers.Context_Type);

         --  Updates a pet in the store with form data
         procedure updatePetWithForm
            (petId : in integer;
             body : in object;
             Context : in out Swagger.Servers.Context_Type);

         --  Deletes a pet
         procedure deletePet
            (petId : in integer;
             api_key : in string;
             Context : in out Swagger.Servers.Context_Type);

         --  uploads an image
         procedure uploadFile
            (petId : in integer;
             body : in string;
             Result  : out ApiResponse;
             Context : in out Swagger.Servers.Context_Type);

         --  Returns pet inventories by status
         procedure getInventory
            (Result  : out object;
             Context : in out Swagger.Servers.Context_Type);

         --  Place an order for a pet
         procedure placeOrder
            (body : in object;
             Result  : out Order;
             Context : in out Swagger.Servers.Context_Type);

         --  Find purchase order by ID
         procedure getOrderById
            (orderId : in integer;
             Result  : out Order;
             Context : in out Swagger.Servers.Context_Type);

         --  Delete purchase order by ID
         procedure deleteOrder
            (orderId : in integer;
             Context : in out Swagger.Servers.Context_Type);

         --  Create user
         procedure createUser
            (body : in object;
             Context : in out Swagger.Servers.Context_Type);

         --  Creates list of users with given input array
         procedure createUsersWithArrayInput
            (body : in array;
             Context : in out Swagger.Servers.Context_Type);

         --  Creates list of users with given input array
         procedure createUsersWithListInput
            (body : in array;
             Context : in out Swagger.Servers.Context_Type);

         --  Logs user into the system
         procedure loginUser
            (username : in string;
             password : in string;
             Result  : out string;
             Context : in out Swagger.Servers.Context_Type);

         --  Logs out current logged in user session
         procedure logoutUser (Context : in out Swagger.Servers.Context_Type);

         --  Get user by user name
         procedure getUserByName
            (username : in string;
             Result  : out User;
             Context : in out Swagger.Servers.Context_Type);

         --  Updated user
         procedure updateUser
            (username : in string;
             body : in object;
             Context : in out Swagger.Servers.Context_Type);

         --  Delete user
         procedure deleteUser
            (username : in string;
             Context : in out Swagger.Servers.Context_Type);

      private
         Impl : Implementation_Type;
      end Server;
   end Shared_Instance;

end IO.OpenAPI.Api.Skeletons;
